

<%-include('../layouts/admin/styles')-%>

   <%-include('../admin/header')-%>
      <div class="conatiner-fluid content-inner mt-n5 py-0">
   <div class="row">
      <div class="col-sm-12">
         <div class="card">
            <div class="card-header d-flex justify-content-between">
               <div class="header-title">
                  <h4 class="card-title">Orders</h4>
               </div>
            </div>
            <div class="card-body p-0">
               <div class="table-responsive mt-4">
                  <table id="basic-table" class="table table-striped mb-0" role="grid">
                     <thead>
                        <tr>
                           <th><a href="#" onclick="sortTable(0)">Order No</a></th>
                           <th><a href="#" onclick="sortTable(1)">Date</a></th>
                           <th>User</th>
                           <th><a href="#" onclick="sortTable(3)">Total</a></th>
                          
                           <th>Status</th>
                           <th>Action</th>
                        </tr>
                     </thead>
                     <tbody>
                         <% orders.forEach(order => { %> 
                            
                        <tr>
                            
                           <td><span>#</span>
                            <%= order.order_no %>
                           </td>
                           <td>
                            <%= order.orderDate.toLocaleString() %>
                           </td>
                           <td> <%= order.username%></td>
                           <td>$<%= order.order_total%></td>
                           <td><div onclick="changeStatus('<%= order._id %>','<%= order.order_status %>')" class="text-info"><%= order.order_status %></div></td>
                           <!-- <td>
                              <div class="d-flex align-items-center mb-2">
                                 <h6>60%</h6>
                              </div>
                              <div class="progress bg-soft-info shadow-none w-100" style="height: 6px">
                                 <div class="progress-bar bg-info" data-toggle="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100"></div>
                              </div>
                           </td> -->
                           <td>
                              <div class="flex align-items-center list-user-action">
                                 <a class="btn btn-sm btn-icon btn-success" data-bs-toggle="tooltip" data-bs-placement="top" title="View" href="#"onclick="showOrderDetails('<%= order._id %>')">
                                    <span class="btn-inner">
                                       <svg class="icon-20" width="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" >
                                          <path fill-rule="evenodd" clip-rule="evenodd" d="M9.87651 15.2063C6.03251 15.2063 2.74951 15.7873 2.74951 18.1153C2.74951 20.4433 6.01251 21.0453 9.87651 21.0453C13.7215 21.0453 17.0035 20.4633 17.0035 18.1363C17.0035 15.8093 13.7415 15.2063 9.87651 15.2063Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                          <path fill-rule="evenodd" clip-rule="evenodd" d="M9.8766 11.886C12.3996 11.886 14.4446 9.841 14.4446 7.318C14.4446 4.795 12.3996 2.75 9.8766 2.75C7.3546 2.75 5.3096 4.795 5.3096 7.318C5.3006 9.832 7.3306 11.877 9.8456 11.886H9.8766Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                          <path d="M19.2036 8.66919V12.6792" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                          <path d="M21.2497 10.6741H17.1597" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                       </svg>                                        
                                    </span>
                                 </a>
                                 <a class="btn btn-sm btn-icon btn-warning" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit" data-original-title="Edit" onclick="editUser('<%= order._id %>')">
                                    <span class="btn-inner">
                                       <svg class="icon-20" width="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                          <path d="M11.4925 2.78906H7.75349C4.67849 2.78906 2.75049 4.96606 2.75049 8.04806V16.3621C2.75049 19.4441 4.66949 21.6211 7.75349 21.6211H16.5775C19.6625 21.6211 21.5815 19.4441 21.5815 16.3621V12.3341" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                          <path fill-rule="evenodd" clip-rule="evenodd" d="M8.82812 10.921L16.3011 3.44799C17.2321 2.51799 18.7411 2.51799 19.6721 3.44799L20.8891 4.66499C21.8201 5.59599 21.8201 7.10599 20.8891 8.03599L13.3801 15.545C12.9731 15.952 12.4211 16.181 11.8451 16.181H8.09912L8.19312 12.401C8.20712 11.845 8.43412 11.315 8.82812 10.921Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                          <path d="M15.1655 4.60254L19.7315 9.16854" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                       </svg>
                                    </span>
                                 </a>
                                 <a class="btn btn-sm btn-icon btn-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete"  href="#" onclick="confirmDelete('<%= order._id %>')">
                                    <span class="btn-inner">
                                       <svg class="icon-20" width="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="currentColor">
                                          <path d="M19.3248 9.46826C19.3248 9.46826 18.7818 16.2033 18.4668 19.0403C18.3168 20.3953 17.4798 21.1893 16.1088 21.2143C13.4998 21.2613 10.8878 21.2643 8.27979 21.2093C6.96079 21.1823 6.13779 20.3783 5.99079 19.0473C5.67379 16.1853 5.13379 9.46826 5.13379 9.46826" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                          <path d="M20.708 6.23975H3.75" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                          <path d="M17.4406 6.23973C16.6556 6.23973 15.9796 5.68473 15.8256 4.91573L15.5826 3.69973C15.4326 3.13873 14.9246 2.75073 14.3456 2.75073H10.1126C9.53358 2.75073 9.02558 3.13873 8.87558 3.69973L8.63258 4.91573C8.47858 5.68473 7.80258 6.23973 7.01758 6.23973" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                       </svg>
                                    </span>
                                 </a>
                              </div>
                           </td>
                        </tr>
                       
                        <% }); %>
                     </tbody>
                  </table>
               </div>
            </div>
         </div>
      </div>
   </div>
      </div>

       
        <script>
         document.addEventListener("DOMContentLoaded", function () {
           const table = document.getElementById("basic-table");
           const tbody = table.querySelector("tbody");
           const headers = table.querySelectorAll("thead th");
           const rows = Array.from(tbody.querySelectorAll("tr"));
           const sortDirection = new Array(headers.length).fill(1);
       
           headers.forEach((th, columnIndex) => {
             th.addEventListener("click", () => {
               sortDirection[columnIndex] *= -1;
       
               if (columnIndex === 0) {
                 rows.sort((a, b) => {
                   const aValue = a.children[columnIndex].textContent.trim().replace('#', '');
                   const bValue = b.children[columnIndex].textContent.trim().replace('#', '');
                   return sortDirection[columnIndex] * (parseInt(aValue) - parseInt(bValue));
                 });
               } else if (columnIndex === 1) {
                 rows.sort((a, b) => {
                   const aValue = new Date(a.children[columnIndex].textContent.trim());
                   const bValue = new Date(b.children[columnIndex].textContent.trim());
                   return sortDirection[columnIndex] * (aValue - bValue);
                 });
               } else if (columnIndex === 3) {
                 rows.sort((a, b) => {
                   const aValue = parseFloat(a.children[columnIndex].textContent.trim().replace('$', '')) || 0;
                   const bValue = parseFloat(b.children[columnIndex].textContent.trim().replace('$', '')) || 0;
                   return sortDirection[columnIndex] * (aValue - bValue);
                 });
               } else {
                 rows.sort((a, b) => {
                   const aValue = a.children[columnIndex].textContent.trim();
                   const bValue = b.children[columnIndex].textContent.trim();
                   return sortDirection[columnIndex] * aValue.localeCompare(bValue);
                 });
               }
       
               rows.forEach((row) => {
                 tbody.appendChild(row);
               });
             });
           });
         });
       </script>
       
       
     <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function confirmDelete(orderId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
      if (result.isConfirmed) {
        // If the user clicks "Yes," proceed with the deletion
        window.location.href = `/admin/delete-order?id=${orderId}`;
      }
    });
  }
  function editUser(orderId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "You wan't to edit the order?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes,!'
    }).then((result) => {
      if (result.isConfirmed) {
        // If the user clicks "Yes," proceed with the deletion
         window.location.href = `/admin/edit-order?id=${orderId}`;
      }
    });
  }
  function changeStatus(orderId,status) {
//    let inputOptions={};
//     if(status ==='Processing'){
// inputOptions = {'Shipped': 'Shipped',
//       'Cancelled': 'Cancel Order'}
//     }else if (status === 'Shipped')
  Swal.fire({
    title: 'Select Status',
    input: 'select',
    inputOptions: {
      //'Processing': 'Processing',
      'Shipped': 'Shipped',
      // 'Delivered': 'Delivered',
      'Cancelled': 'Cancel Order'
    },
    inputPlaceholder: 'Select a Status',
    showCancelButton: true,
    confirmButtonText: 'Submit',
    cancelButtonText: 'Cancel',
    inputValidator: (value) => {
      if (!value) {
        return 'Please select a status';
      }
    }
  }).then((result) => {
    if (result.isConfirmed) {
      const selectedStatus = result.value;
      Swal.fire({
        title: 'Are you sure?',
        text: "You wan't to edit Status!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Edit it!'
      }).then((result) => {
        if (result.isConfirmed) {
          updateOrderStatus(orderId, selectedStatus);
        }
      });
    }
  });
}

function updateOrderStatus(orderId, selectedStatus) {
  // Create an object with the data you want to send in the request body
  const data = {
    orderId: orderId,
    status: selectedStatus,
  };

  fetch('/admin/update-order-status', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data), // Convert the data object to JSON
  })
    .then((response) => {
      if (response.ok) {
        // Handle a successful response here
        return response.json(); // If the server sends JSON response data
      } else {
        // Handle an error response here
        throw new Error('Failed to update order status');
      }
    })
    .then((data) => {
     // Handle the JSON response data here if needed
  Swal.fire({
    title: 'Success!',
    text: `Order status updated to ${selectedStatus}`,
    icon: 'success',
    confirmButtonText: 'OK',
  }).then((result) => {
    if (result.isConfirmed) {
      // User clicked the "OK" button, so reload the page
      window.location.reload();
    }
  });
})
    
    .catch((error) => {
      console.error('Error:', error);
      Swal.fire('Error', 'Failed to update order status', 'error');
    });
}


</script>
<script>
   function showOrderDetails(orderId){
      fetch(`/admin/orders/${orderId}`)
      .then((response)=>response.json())
      .then((orderDetails)=>{

      // Prepare HTML for displaying items
       // Prepare HTML for displaying items in a table
      //  let itemsHtml = '<table>';
      // itemsHtml += '<tr><th>Product Name</th><th>Quantity</th></tr>';
      // if (orderDetails.items && Array.isArray(orderDetails.items)) {
      //   orderDetails.items.forEach((item) => {
      //     itemsHtml += '<tr>';
      //     itemsHtml += `<td>${item.productname}</td>`;
      //     itemsHtml += `<td>${item.quantity}</td>`;
      //     itemsHtml += '</tr>';
      //   });
      // }
      // itemsHtml += '</table>';
       // Create an HTML string for the items table
  const itemsHtml = `
    <table>
      <thead>
        <tr>
          <th>Product Name</th>
          <th>Quantity</th>
        </tr>
      </thead>
      <tbody>
        ${orderDetails.items.map(item => `
          <tr>
            <td>${item.productname}</td>
            <td>${item.quantity}</td>
          </tr>
        `).join('')}
      </tbody>
    </table>
  `;
      Swal.fire({
         title:'Order Details',
         html:
         ` <style>
        table {
          border-collapse: collapse;
          width: 100%;
          max-height: 200px; /* Set a maximum height for the table */
          overflow-y: auto; /* Enable vertical scrolling when needed */
        }

        table, th, td {
          border: 1px solid #000;
        }

        th, td {
          padding: 8px;
          text-align: left;
        }
      </style>
         
         <b>Order ID:</b> ${orderDetails._id}<br>
          <b>Payment Mode:</b> ${orderDetails.payment_mode}<br>
          <b>Payment Balance:</b> ${orderDetails.payment_balance}<br>
          <b>Payment Status:</b> ${orderDetails.payment_status}<br>
          <b>Items:</b><br>${itemsHtml}<br>`,
         icon:'info',
         showCancelButton:false,
         showConfirmButton:true,
         confirmButtonText:'OK',

      })
   })
   .catch((error)=>{
     Swal.fire({title:'Error',
      text:'Failed to fetch order Details',
      icon:'error',
      showCancelButton:false,
      showConfirmButton:true,
      confirmButtonText:'OK',
   })
}) 
   }
</script>
   
      <!-- Footer Section Start -->
     
      <%-include('../admin/footer')-%>
      <!-- Footer Section End -->    </main>
  
    <!-- Wrapper End-->
    <!-- offcanvas start -->
   
    <%- include('../layouts/admin/scripts')-%>